import{C as n,a as s}from"./index-Cvl-xLcO.js";import"./vendor-B1sUnLqs.js";import"./ui-BXNMeVkq.js";class v{static scheduledEvaluations=new Map;static schedulePrivateEvaluation(t,e){const o=new Date,a=e.getTime()-o.getTime();if(a<=0){this.executePrivateEvaluation(t);return}this.cancelPrivateEvaluation(t);const i=setTimeout(()=>{this.executePrivateEvaluation(t),this.scheduledEvaluations.delete(t)},a);this.scheduledEvaluations.set(t,i),console.log(`Private評価をスケジュールしました: ${t} - ${e.toLocaleString()}`)}static async executePrivateEvaluation(t){try{if(console.log(`Private評価を開始: ${t}`),!n.getProblem(t)){console.error(`問題が見つかりません: ${t}`);return}const o=s.getSubmissions(t);for(const a of o)try{const i=await s.evaluatePrivateSubmission(t,a.id);console.log(`Private評価完了: ${a.username} - スコア: ${i.testScore}`)}catch(i){console.error(`Private評価エラー (${a.username}):`,i)}await s.updateLeaderboard(t),console.log(`Private評価完了: ${t}`)}catch(e){console.error("Private評価実行エラー:",e)}}static cancelPrivateEvaluation(t){const e=this.scheduledEvaluations.get(t);e&&(clearTimeout(e),this.scheduledEvaluations.delete(t),console.log(`Private評価スケジュールをキャンセル: ${t}`))}static scheduleForNewProblem(t){const e=new Date;e.setDate(e.getDate()+7),this.schedulePrivateEvaluation(t,e)}static clearAllSchedules(){for(const[t,e]of this.scheduledEvaluations)clearTimeout(e);this.scheduledEvaluations.clear(),console.log("全てのPrivate評価スケジュールをクリアしました")}}export{v as PrivateEvaluationScheduler};
